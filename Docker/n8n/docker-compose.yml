# docker-compose.yml
services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - TZ=UTC
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  n8n:
    container_name: n8n
    image: n8nio/n8n:latest
    restart: always
    volumes:
      # - ./n8n:/home/node/.n8n # n8n data
      - ./n8n/log:/var/log/n8n # n8n log
      - ./n8n/ssl:/home/node/.n8n/ssl 
    environment:
      - DB_TYPE=${DB_TYPE}
      - DB_POSTGRESDB_HOST=dotcon.vn
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=workflow
      - DB_POSTGRESDB_USER=openpg
      - DB_POSTGRESDB_PASSWORD=
      - WEBHOOK_URL=${WEBHOOK_URL}
      - N8N_HOST=${N8N_HOST}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_EMAIL_MODE=${N8N_EMAIL_MODE}
      - N8N_SMTP_HOST=${N8N_SMTP_HOST}
      - N8N_SMTP_PORT=${N8N_SMTP_PORT}
      - N8N_SMTP_USER=${N8N_SMTP_USER}
      - N8N_SMTP_PASS=${N8N_SMTP_PASS}
      - N8N_SMTP_SENDER=${N8N_SMTP_SENDER}
      - N8N_SMTP_SSL=true
      - N8N_EXPRESS_TRUST_PROXY=true
      - TZ=UTC
    depends_on:
      - postgres

  nginx:
    image: nginx:latest
    container_name: nginx_n8n
    restart: unless-stopped
    ports:
      - "443:443" # public port
      - "80:80" # public port
    depends_on:
      - n8n
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d # configuration in default.conf
      - ./nginx/ssl:/etc/nginx/ssl # Secure Sockets Layer (SSL) file: server-sample.crt, server-sample.key
      - ./nginx/html:/var/www/html # static html web for example
      - ./nginx/log:/var/log/nginx/
    environment:
      - TZ=UTC

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    command: /bin/sh -c "while sleep 1000; do :; done"
    volumes:
      - ./nginx/ssl/letsencrypt:/etc/letsencrypt
      - ./certbot/logs:/var/log/letsencrypt
      - ./nginx/html:/var/www/html # static html web for example
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped
    environment:
      - TZ=UTC